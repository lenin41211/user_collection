// void login()
    // {
    //     string word,data,user_name,pwd,socket_id;
    //     vector<std::string> login_vector;
    //     std::stringstream data_ss;
    //     std::stringstream reply_ss;
        
    //     zmq::context_t context (1);
    //     zmq::socket_t socket (context, ZMQ_REP);
    //     zmq::message_t request;

    //     socket.bind ("tcp://*:5556");
    //     cout<<"Login Socket Listening at port : 5555"<<endl;
    //     while (true) {
            
    //         //  Wait for next request from client
    //         socket.recv (&request);
    //         data = (char *) request.data();
    //         cout<<data<<endl;
    //         data_ss.str("");
    //         data_ss<<data;

    //         while (getline(data_ss, word, ',')) {

	// 			login_vector.push_back(word);
	// 		}
    //         data_ss.clear();
    //         socket_id = login_vector[0];
    //         user_name = login_vector[1];
    //         pwd = login_vector[2]; 
    //         login_vector.clear();
    //         try{

    //             //string login_func = "SELECT cout(*) from user_login where usernmae = '"+user_name+"' AND password = '"+pwd+"'"; //select_user();
    //               string login_func = "select exists(select 1 from user_login where username = '"+user_name+"' and password  = '"+pwd+"')";
    //             /* Create a non-transactional object. */
                        
    //             nontransaction N(db_conn::Con);
    //             result A( N.exec( login_func ));
    //             reply_ss.str("");
    //             /* List down all the records */
    //             for (result::const_iterator c = A.begin(); c != A.end(); ++c) 
    //             {
    //                 cout<<c[0].as<bool>()<<endl;
    //                 if(c[0].as<bool>() == true )
    //                 {
    //                     cout<<"login sucess"<<endl;
    //                     reply_ss<<socket_id<<","<<true;
    //                     break;
    //                 }
    //                 else
    //                 {
    //                     cout<<"login failed"<<endl;
    //                     reply_ss<<socket_id<<","<<false;
    //                     break;
    //                 }
    //             }
    //         }
    //         catch (const std::exception &e)
    //         {
    //             cerr << "ERROR :: " <<e.what() << std::endl;
    //         }
    //         cout<<reply_ss.str().c_str()<<endl;
    //         zmq::message_t reply ((void*)reply_ss.str().c_str(), reply_ss.str().size());
    //         socket.send (reply);
            
    //     }
    // }
    //     try
    //     {
    //             string select_user = "SELECT * from user_login"; //select_user();
                        
    //             /* Create a non-transactional object. */
                        
    //             nontransaction N(db_conn::Con);
    //             result A( N.exec( select_user ));

    //             /* List down all the records */
    //             for (result::const_iterator c = A.begin(); c != A.end(); ++c) 
    //             {

    //                 usr_lgn.lgn_coll[c[0].as<int>()].user_id = c[0].as<long int>();
    //                 usr_lgn.lgn_coll[c[0].as<int>()].username = c[1].as<string>();
    //                 usr_lgn.lgn_coll[c[0].as<int>()].password = c[2].as<string>();
    //                 usr_lgn.lgn_coll[c[0].as<int>()].transaction_password = c[3].as<string>();
    //                 usr_lgn.lgn_coll[c[0].as<int>()].user_enabled = c[4].as<bool>();
    //                 usr_lgn.lgn_coll[c[0].as<int>()].created_time = c[5].as<string>();
    //                 usr_lgn.lgn_coll[c[0].as<int>()].user_type_id = c[6].as<long int>();
                    
    //                 cout<< usr_lgn.lgn_coll[c[0].as<int>()].user_id <<endl;
    //                 cout<< usr_lgn.lgn_coll[c[0].as<int>()].username <<endl;
    //                 cout<< usr_lgn.lgn_coll[c[0].as<int>()].password <<endl;
    //                 cout<<usr_lgn.lgn_coll[c[0].as<int>()].transaction_password <<endl;
    //                 cout<< usr_lgn.lgn_coll[c[0].as<int>()].user_enabled <<endl;
    //                 cout<< usr_lgn.lgn_coll[c[0].as<int>()].created_time <<endl;
    //                 cout<< usr_lgn.lgn_coll[c[0].as<int>()].user_type_id <<endl;

    //                 usr_lgn.count++;
    //             }

    //             string select_profile = "SELECT * from select_profile()";
                        

    //             result B( N.exec( select_profile ));

    //             /* List down all the records */
    //             for (result::const_iterator c = B.begin(); c != B.end(); ++c) 
    //             {
                
    //                 usr_pro.pro_coll[c[0].as<int>()].profile_id = c[0].as<long int>();
    //                 usr_pro.pro_coll[c[0].as<int>()].firstname = c[1].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].lastname = c[2].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].gender = c[3].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].passport_number = c[4].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].other_id = c[5].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].other_id_type = c[6].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].ssn = c[0].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].date_of_birth = c[1].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].address1 = c[2].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].address2 = c[3].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].city = c[4].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].state = c[5].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].state = c[5].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].state = c[5].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].state = c[5].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].country = c[6].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].nationality = c[0].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].zipcode = c[1].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].phone_number = c[2].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].agree_for_news_letter = c[3].as<bool>();
    //                 usr_pro.pro_coll[c[0].as<int>()].email_id = c[4].as<string>();
    //                 usr_pro.pro_coll[c[0].as<int>()].last_update_time = c[5].as<long int>();

    //                 usr_pro.count++;

    //             }

    //             string select_account = "SELECT * from select_account()";

    //             result C( N.exec( select_account ));

    //             /* List down all the records */
    //             for (result::const_iterator c = C.begin(); c != C.end(); ++c) 
    //             {
                    
    //                 usr_acc.acc_coll[c[0].as<int>()].account_id = c[0].as<long int>();
    //                 usr_acc.acc_coll[c[0].as<int>()].account_type_id = c[1].as<long int>();
    //                 usr_acc.acc_coll[c[0].as<int>()].account_name = c[2].as<string>();
    //                 usr_acc.acc_coll[c[0].as<int>()].account_enabled = c[3].as<bool>();
    //                 usr_acc.acc_coll[c[0].as<int>()].account_creation_date = c[4].as<long int>();
    //                 usr_acc.acc_coll[c[0].as<int>()].balance = c[5].as<long double>();
    //                 usr_acc.acc_coll[c[0].as<int>()].remarks = c[6].as<string>();
    //                 usr_acc.acc_coll[c[0].as<int>()].currency_id = c[0].as<string>();
    //                 usr_acc.acc_coll[c[0].as<int>()].email_id = c[0].as<string>();
                    
    //                 usr_acc.count++;

    //             }

    //             string sha512 = "select sha512('leninkumar')";
    //             result s(N.exec( sha512 ));
    //             for (result::const_iterator c = s.begin(); c != s.end(); ++c) 
    //             {
    //                 cout<<c[0].as<string>()<<endl;
    //             }
    //             sha512 = "select sha512('leninkumar')";
    //             result t(N.exec( sha512 ));
    //             for (result::const_iterator c = t.begin(); c != t.end(); ++c) 
    //             {
    //                 cout<<c[0].as<string>()<<endl;
    //             }

                
    //     }
    //     catch (const std::exception &e)
    //     {
    //         cerr << "ERROR :: " <<e.what() << std::endl;
    //     }


    class profile
    {
        user *user_obj;

        struct profile_collection
        {

            long int profile_id;
            std::string firstname,lastname,gender,passport_number,other_id,other_id_type,ssn,date_of_birth,address1,address2,city,state,country,phone_number,nationality,zipcode,email_id,last_update_time;
            bool agree_for_news_letter;
        
        }pro_coll;
        
       
    };

    class account{

        struct account_collection
        {
        
            unsigned long int account_id,account_type_id;
            std::string account_name,currency_id,email_id,remarks,account_creation_date;
            long double balance;
            bool account_enabled;
        
        }acc_coll;
    };
        
    class login
    {
        struct login_collection
        {
            unsigned long int user_id,user_type_id;
            std::string username,password,transaction_password,user_type,created_time;
            bool user_enabled;
    
        }lgn_coll;
    };  